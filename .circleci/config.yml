version: 2.1

# or
orbs:
  allure: ayte/allure@0.1.3

# 共通化部分
executors:
  default:
    working_directory: ~/workspace
    docker:
      - image: circleci/node:12
  java:
    working_directory: ~/workspace
    docker:
    - image: circleci/openjdk:8-jdk

jobs:
  setup:
    executor:
      name: default
    steps:
      # git pullする
      - checkout
      - run: npm install
      - run: echo "hello world"
      # jobを超えて使いまわしたものをroot/pathsに保存する
      - persist_to_workspace:
          root: .
          paths:
          - 'node_modules'
  test:
    executor:
      name: default
    steps:
      - checkout
       # persist_to_workspaceで保存したデータをatのパスにダウンロードする
      - attach_workspace:
          at: .
      # - allure/install
      - run:
          name: "Install Java"
          command: sudo apt-get install openjdk-8-jdk
      - run:
          name: "Install Allure"
          command: sudo apt-get install allure-commandline
      - run:
          name: "JavaScript Test Suite"
          # yarn here makes sure we are using the local jest binary
          command: npx jest --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - run: npx allure generate allure-results -o html/allure-results
      # - persist_to_workspace:
      #     root: .
      #     paths:
      #     - 'allure-results'
      # - run:
      #     name: "report Allure"
      #     command: allure generate allure-results -o html/allure-results

      - allure/report:
          target-path: './html/allure-results'
          results-path: 'allure-results'

      - store_test_results:
          path: ./reports/junit/

      # カバレッジ情報をairtifactに保存する
      - store_artifacts:
          path: ./html/allure-results


  allure:
    executor:
      name: java
    steps:
      - checkout
      - attach_workspace:
          at: .
      - allure/install
      - run: java -version
      - allure/report:
          target-path: './html/allure-results'
          results-path: 'allure-results'


workflows:
  setup_and_deploy:
    jobs:
      - setup
      - test:
          # 以下のjobの完了後に実行する
          requires:
            - setup
      # - allure:
      #     requires:
      #       - test
